name: Build
# 7z => cmake -E tar xvf/cvf --format=7zip
on:
  workflow_dispatch:

env:
  FF_VER: master
  LLVM_VER: ${{ vars.LLVM_VER }}
  NINJA_STATUS: '[%f/%t %e %r]'
  SF_PW: ${{ secrets.SF_PW }}
  SF_USER: ${{ secrets.SF_USER }}

jobs:
  Windows_VS2022:
    runs-on: windows-latest
    env:
      TARGET_OS: windows-desktop
    strategy:
      fail-fast: false
      matrix:
        config: [MinSizeRel]
    steps:
    - uses: actions/checkout@v3
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        repository: Luweijia1989/lite-obs
        path: lite-obs
        ref: main
        fetch-depth: 1
        token: ${{ secrets.CLONE_PAT }}
        submodules: 'recursive'
    - name: 'Restore External Dep cache'
      id: external-dep-cache
      uses: actions/cache@v3
      with:
        path: ./lite-obs/external
        key: external-dep-${{ env.TARGET_OS }}-ffmpeg-${{ env.FF_VER }}
    - name: Create Build Environment
      shell: bash
      env:
        SYSROOT_CACHE_HIT: true
        EXTERNAL_DEP_CACHE_HIT: ${{ steps.external-dep-cache.outputs.cache-hit }}
      working-directory: lite-obs
      run: ../ci-before-build.sh
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    - name: Configure for win x64
      env:
        ARCH: x64
      working-directory: lite-obs
      run: cmake -DCMAKE_SYSTEM_PROCESSOR=${{ env.ARCH }} -DCMAKE_SYSTEM_VERSION="6.0" -GNinja  -Bbuild/${{ env.TARGET_OS }}-${{ env.ARCH }} -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DCMAKE_INSTALL_PREFIX=liteobs-sdk-${{ env.ARCH }} -DCMAKE_VERBOSE_MAKEFILE=1 .
    - name: Build for win x64
      working-directory: lite-obs
      run: cmake --build build/${{ env.TARGET_OS }}-x64


